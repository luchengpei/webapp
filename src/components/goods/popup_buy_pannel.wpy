// 购物面板组件
<style lang="scss" scoped>
  @import '../../scss/common';
  .pannel {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background: #fff;
    transform: translateY(150%);
    transition: all 0.4s ease;
    z-index: 100001;
    &.pannel-show {
      transform: translateY(0);
      &.fix-ipx {
        padding-bottom: $fixIpxBottom;
      }
    }
    .pannel-info {
      position: relative;
      margin-left: 40rpx;
      display: flex;
      flex-direction: row;
      border-bottom: 1rpx solid $borderColor;
      .sku-pic {
        position: relative;
        width: 200rpx;
        height: 200rpx;
        top: -72rpx;
        left: 0rpx;
        background: $gray;
        border-radius: 10rpx;
      }
      .sku-info {
        flex: 1;
        margin-top: 90rpx;
        margin-left: 20rpx;
        margin-right: 40rpx;
        .sku-title {
          font-size: 34rpx;
          line-height: 52rpx;
        }
        .sku-price {
          margin-top: 10rpx;
          font-size: 42rpx;
          line-height: 46rpx;
          color: $priceRed;
        }
        .mem-price{
          display: inline-block;
          margin-bottom: 5rpx;
          background: $mainColor;
          color: #fff;
          padding: 2rpx 12rpx;
          font-size: $fontSize5;
          border-radius: $borderRadius;
        }
        .sku-num-box {
          display: flex;
          flex-direction: row;
          text {
            flex: 1;
            font-size: 24rpx;
            line-height: 52rpx;
            color: $gray;
            &:nth-child(2n) {
              text-align: right;
            }
          }
        }
      }
      .close-icon {
        position: absolute;
        top: 30rpx;
        right: 40rpx;
        padding-left: 40rpx;
        >image {
          width: 30rpx;
          height: 30rpx;
        }
      }
    }
    .sku-list-container {
      display: flex;
      margin-left: 40rpx;
      padding-right: 40rpx;
      flex-direction: column;
      .sku-list-item {
        display: flex;
        flex-direction: column;
        border-bottom: 1rpx solid $borderColor;
        .sku-item-key {
          margin: 15rpx 0;
          font-size: 28rpx;
          line-height: 52rpx;
          color: $black;
        }
        .sku-item-value-list {
          display: flex;
          flex-direction: row;
          flex-wrap: wrap;
          .sku-item-value {
            margin-right: 30rpx;
            margin-bottom: 22rpx;
            padding: 0 20rpx;
            height: 56rpx;
            line-height: 56rpx;
            font-size: 24rpx;
            color: $mainColor;
            border: 1rpx solid $mainColor;
            border-radius: 6rpx;
            text-align: center;
            &.selected {
              color: #fff;
              background: $mainColor;
            }
            &.disabled {
              color: $gray;
              background: #444444;
            }
          }
        }
      }
    }
    .buy-num-container {
      margin: 0 40rpx;
      height: 100rpx;
      line-height: 100rpx;
      display: flex;
      flex-direction: row;
      .buy-num-title {
        flex: 1;
        font-size: 28rpx;
        .buy-num-text {
          color: $black;
        }
        .buy-stock-text {
          color: $gray;
        }
      }
      .buy-num-selector {
        text-align: right;
      }
    }
    .btn-box {
      display: flex;
      height: 93rpx;
      line-height: 93rpx;
      .btn-cart {
        background: #f7b94c;
      }
      .btn-buy {
        background: #f7564c;
      }
    }
    .btn {
      flex: 1;
      width: 100%;
      height: 93rpx;
      line-height: 93rpx;
      background: #f7564c;
      color: #fff;
      font-size: 34rpx;
      text-align: center;
    }
  }
</style>

<template>
  <view>
    <MaskLayer :display.sync="display" @tap.user="close" />
    <view class="pannel {{display ? 'pannel-show' : ''}} {{isIpx ? 'fix-ipx' : ''}}">
      <!-- 普通商品 -->
      <block wx:if="{{mode === 'default'}}">
        <view class="pannel-info">
          <image class="sku-pic" mode="aspectFill" src="{{tpImage ? tpImage : product.productThumbnail}}" @tap="preview" />
          <view class="sku-info">
            <view class="sku-title">{{product.productName}}</view>
            <view class="sku-price">¥{{selectedExtendTp ? selectedExtendTp.productTpPrice : minPrice}}</view>
            <!-- 会员价格显示 -->
            <view class="mem-price" wx:if="{{product.isShowMemberPrice}}">会员价 ¥{{selectedExtendTp ? selectedExtendTp.memberPrice : product.memberPrice}}</view> 
            <view class="sku-num-box">
              <text wx:if="{{hasTp}}">库存：{{selectedExtendTp ? selectedExtendTp.productTpInventory : product.inventoryNum}}件</text>
              <text wx:else>库存：{{product.inventoryNum || 0}}件</text>
              <text wx:if="{{hasTp && firstNotChooseTpIndex !== -1}}">请选择：{{tpNames[firstNotChooseTpIndex]}}</text>
            </view>
          </view>
          <view class="close-icon" @tap="close" wx:if="{{imageUrl}}">
            <image src="{{imageUrl}}/ic-close.png" />
          </view>
        </view>
      </block>
      <!-- 返现 -->
      <block wx:if="{{mode === 'cash_back'}}">
        <view class="pannel-info">
          <image class="sku-pic" mode="aspectFill" src="{{cashBack.productThumbnail}}" @tap="preview" />
          <view class="sku-info">
            <view class="sku-title">{{cashBack.productName}}</view>
            <view class="sku-price">¥{{cashBack.bargainPrice}}</view>
            <view class="sku-num-box">
              <text>库存：{{cashBack.productTpInventory}}件</text>
            </view>
          </view>
          <view class="close-icon" @tap="close" wx:if="{{imageUrl}}">
            <image src="{{imageUrl}}/ic-close.png" />
          </view>
        </view>
      </block>
      <!-- 规格列表 普通-->
      <block wx:elif="{{mode === 'default'}}">
        <view class="sku-list-container" wx:if="{{hasTp}}">
          <view class="sku-list-item" wx:for="{{productTpList}}" wx:for-item="item" wx:for-index="index" wx:key="index">
            <block wx:if="{{item.length > 0}}">
              <view class="sku-item-key">{{tpNames[index]}}</view>
              <view class="sku-item-value-list">
                <block wx:for="{{item}}" wx:for-item="titem" wx:for-index="tindex" wx:key="tindex">
                  <view class="sku-item-value {{titem.productTpId === userSelectTps[index] ? 'selected' : ''}}" @tap="selectSku({{index}}, {{titem.productTpId}})" wx:if="{{!titem.disabled}}">{{titem.productTpValue}}</view>
                  <view class="sku-item-value disabled" wx:else>{{titem.productTpValue}}</view>
                </block>
              </view>
            </block>
          </view>
        </view>
      </block>
      <!-- 规格列表 限时购-->
      <block wx:elif="{{mode === 'flash_sale'}}">
      </block>
      <!-- 规格列表 团购-->
      <block wx:elif="{{mode === 'group_sale'}}">
      </block>
      <!-- 数量操作栏 -->
      <view class="buy-num-container">
        <view class="buy-num-title">
          <text class="buy-num-text">购买数量</text>
          <block wx:if="{{mode === 'default'}}">
            <text class="buy-stock-text" wx:if="{{hasTp}}">（剩余{{selectedExtendTp ? selectedExtendTp.productTpInventory : product.inventoryNum}}件）</text>
            <text class="buy-stock-text" wx:else>（剩余{{product.inventoryNum || 0}}件）</text>
          </block>
          <block wx:elif="{{mode === 'cash_back'}}">
            <text class="buy-stock-text">（剩余{{cashBack.productTpInventory}}件）</text>
          </block>
          <block wx:elif="{{mode === 'flash_sale'}}">
            <text class="buy-stock-text">（剩余{{flashSale.productTpInventory}}件）</text>
          </block>
          <block wx:elif="{{mode === 'group_sale'}}">
            <text class="buy-stock-text">（剩余{{groupSale.productTpInventory}}件）</text>
          </block>
          <block wx:elif="{{mode === 'group_sale'||mode === 'flash_sale'}}">
            <text class="buy-stock-text">（剩余{{product.inventoryNum || 0}}件）</text>
          </block>
        </view>
        <view class="buy-num-selector">
          <ZanQuantity :quantity.sync="quantity" @change.user="num" />
        </view>
      </view>
      <!-- 操作按钮 -->
      <view class="btn" wx:if="{{action === 'plus_cart'}}" @tap="plusCart">下一步</view>
      <view class="btn" wx:if="{{action === 'buy'}}" @tap="buy">下一步</view>
      <!-- 操作按钮 -->
      <view class="btn-box" wx:if="{{action === 'choose_spec'}}">
        <view class="btn btn-cart" wx:if="{{mode == 'default'||mode == 'cash_back'}}" @tap="plusCart">加入购物车</view>
        <view class="btn btn-buy" @tap="buy">立即购买</view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Event from '@/utils/Event'
  import Util from '@/utils/Util'
  import MaskLayer from '@/components/common/mask_layer'
  import ZanQuantity from '@/components/zanui/quantity'
  import base from '@/mixins/base'
  import Tips from '@/utils/Tips'
  export default class PopupBuyPannel extends wepy.component {
    props = {
      hasTp: {},
      display: {},
      minPrice: {},
      productTpExtendList: [],
      productTpList: {
        type: Array,
        default: [],
        twoWay: true
      },
      product: {},
      userSelectTps: {
        type: Array,
        default: [],
        twoWay: true
      },
      tpNames: {},
      firstNotChooseTpIndex: {
        type: Number,
        default: 0,
        twoWay: true
      },
      selectedExtendTp: {
        type: Object,
        default: null,
        twoWay: true
      },
      buyNum: {
        type: Number,
        default: 1,
        twoWay: true
      },
      mode: {
        default: 'default'
      },
      cashBack: { // 返现
        default: {}
      },
      groupSale: { // 团购
        default: {}
      },
      flashSale: { // 限时购
        default: {}
      }
    }
    components = {
      MaskLayer: MaskLayer,
      ZanQuantity: ZanQuantity
    }
    mixins = [base]
    data = {
      action: 'choose_spec',
      tpImage: ''
    }
    computed = {
      quantity() {
        let max = ''
        if (this.mode === 'default') {
          max = this.selectedExtendTp && this.selectedExtendTp.productTpInventory ? this.selectedExtendTp.productTpInventory : this.product.inventoryNum
        } else if (this.mode === 'cash_back') {
          max = 1
        } else if (this.mode === 'flash_sale') { // 限时购 限购数量  flashSaleNum 0 不限购 非0 限购数量
          max = this.flashSale.flashSaleNum === 0 ? this.flashSale.productTpInventory : this.flashSale.flashSaleNum
        } else if (this.mode === 'group_sale') {
          max = 1
        }
        return {
          num: this.buyNum,
          min: 1,
          max: max
        }
      }
    }
    methods = {
      close() {
        this.closePannel()
      },
      num({
        quantity
      }) {
        this.buyNum = quantity
      },
      // 选择规格
      selectSku(index, tpId) {
        this.userSelectTps[index] = this.userSelectTps[index] === tpId ? 0 : tpId
        // TODO 选择规格后根据规格组筛选出可选规格id(暂不考虑)
        // 假设有三个规格值
        // 选中其中一个，和这个规格值有关联的SKU如果商品库存 > 0则可选中
        // this.disabledSku(index, tpId)
        // 选择规格后匹配规则已选择规格组
        let selctStr = this.userSelectTps.join(',')
        this.firstNotChooseTpIndex = this.userSelectTps.indexOf(0)
        this.selectedExtendTp = null
        for (let i = 0; i < this.productTpExtendList.length; i++) {
          if (selctStr === this.productTpExtendList[i].productTpIds) {
            this.selectedExtendTp = this.productTpExtendList[i]
            break
          }
        }
        // 根据所选规格显示规格图片
        if (this.userSelectTps[0] > 0 && this.userSelectTps[0] === tpId) {
          this.tpImage = this.productTpList[0].filter(item => item.productTpId === tpId)[0].productTpImg
        } else if (this.userSelectTps[0] === 0) {
          this.tpImage = ''
        }
        this.$apply()
      },
      preview() {
        wepy.previewImage({
          urls: this.product.tpImgs, // 需要预览的图片链接列表,
          current: this.tpImage ? this.tpImage : this.product.tpImgs[0]
        })
      },
      buy() { // 普通 限时购  团购  返现
        if (this.mode === 'cash_back') {
          if (this.cashBack.productTpInventory === 0) {
            Tips.toast('库存不足', null, 'none')
            return
          }
        } else if (this.mode === 'group_buy') {
          if (this.groupSale.productTpInventory === 0) {
            Tips.toast('库存不足', null, 'none')
            return
          }
        } else if (this.mode === 'flash_sale') {
          if (this.flashSale.productTpInventory === 0) {
            Tips.toast('库存不足', null, 'none')
            return
          }
        }
        this.$emit('buy', this.mode)
      },
      plusCart() {
        this.$emit('plusCart')
      }
    };
    async onLoad() {
      this.source = this.$root.$wxpage.route
      // 监听购物面板打开的事件
      Event.listen(Event.GOODS_PANEL_OPEN, this.openPannel.bind(this), this)
      Event.listen(Event.GOODS_PANEL_CLOSE, this.closePannel.bind(this), this)
    }
    // 规格按钮库存空处理
    disabledSku(index, tpId) {
      // 是否重置
      const init = this.userSelectTps.filter(item => item > 0).length === 0
      console.log('click', index, tpId)
      console.log('productTpExtendList', this.productTpExtendList)
      console.log('productTpList', this.productTpList)
      console.log('this.userSelectTps', this.userSelectTps.length)
      this.productTpList = this.productTpList.map((tpItem, tpIndex) => {
        if (tpIndex === index) return tpItem
        return tpItem.map(tpItemChild => {
          if (init) {
            tpItemChild.disabled = false
            return tpItemChild
          }
          const targetTp = this.productTpExtendList.filter(tpeItem => {
            return Util.isContain(tpeItem.productTpIds.split(','), [`${tpId}`, `${tpItemChild.productTpId}`])
          })[0] || null
          console.log('curTpId', tpId, 'targetTp', targetTp)
          tpItemChild.disabled = !!(targetTp && targetTp.productTpInventory === 0)
          return tpItemChild
        })
      })
      console.log('productTpList', this.productTpList)
      console.log('userSelectTps', this.userSelectTps)
    }
    /**
     * 弹出选项框
     */
    openPannel({
      source,
      action
    }) {
      if (source !== this.source) return
      this.display = true
      this.action = action
      this.$apply()
    }
    /**
     * 关闭选项
     */
    closePannel() {
      this.display = false
      this.$apply()
    }
  }
</script>
