<style lang="scss" scoped>
  @import '../../scss/common';
  .goods-item {
    display: flex;
    width: 50%;
    background: #fff;
    justify-content: flex-start;
    &:nth-child(2n) {
      justify-content: flex-end;
      .goods-item-container {
        margin-left: 0;
        margin-right: 40rpx;
      }
    }
    &.hover {
      opacity: $opacity;
    }
    .goods-item-container {
      display: flex;
      flex-direction: column;
      width: 320rpx;
      margin-left: 40rpx;
      .image-box {
        position: relative;
        width: 100%;
        height: 320rpx;
        margin-top: 35rpx;
        image {
          // background: gray;
          width: 100%;
          height: 100%;
        }
        // .buyer-num {
        //   display: flex;
        //   justify-content: center;
        //   align-content: center;
        //   position: absolute;
        //   width: 100%;
        //   height: 60rpx;
        //   line-height: 60rpx;
        //   bottom: 0;
        //   left: 0;
        //   z-index: 10;
        //   background-color: rgba(0, 0, 0, 0.7);
        //   .buyer-num-text {
        //     color: #fff;
        //     font-size: 24rpx;
        //   }
        // }
        .member-price {
          background: $mainColor;
          color: #fff;
          position: absolute;
          bottom: 20rpx;
          left: 20rpx;
          padding: 2rpx 12rpx;
          font-size: $fontSize5;
          border-radius: $borderRadius;
        }
      }
      .goods-title {
        margin-top: 24rpx;
        font-size: $fontSize4;
        color: $black;
        line-height: 36rpx;
        display: -webkit-box;
        word-break: break-all;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      .goods-box {
        margin-top: 5rpx;
        display: flex;
        justify-content: space-between;
        align-content: center;
        .goods-price{
          .sale-price {
            font-size: 32rpx;
            color: #f31313;
          }
          .mark-price {
            margin-left: 10rpx;
            font-size: $fontSize4;
            color: $gray;
            text-decoration: line-through;
          }
        }
        .buyer-num{
            font-size: $fontSize4;
            color: $gray;
            margin-right: 0rpx;
            height: 46rpx;
            text-align: center;
            line-height: 64rpx;
        }
        
      }
      .goods-get{
          margin-top: 5rpx;
          font-size: $fontSize4;
          color: #ff9c00;
      }
    }
  }
</style>

<template>
  <view class="goods-item" hover-class="hover" @tap="routerTo('/pages/goods/detail?id={{item.productId}}')">
    <view class="goods-item-container">
      <view class="image-box">
        <image src="{{item.productThumbnail}}" mode="aspectFill" wx:if="{{item.productThumbnail}}" lazy-load/>
        <!-- <view class="buyer-num">
          <view class="buyer-num-text">{{item.buyingNum}} 人已买</view>
        </view> -->
        <view class="member-price" wx:if="{{item.memberPrice && item.isShowMemberPrice}}">会员价¥{{item.memberPrice}}</view>
      </view>
      <text class="goods-title">{{item.productName}}</text>
      <view class="goods-box">
        <view class="goods-price">
          <text class="sale-price">¥{{item.productPrice}}</text>
          <text class="mark-price" wx:if="{{mode === 'index'}}">¥{{item.productCrossLinePrice}}</text>
        </view>
        <view class="buyer-num">{{item.buyingNum}}人已买</view>
      </view>   
    </view>
     <!-- <view class="goods-get" wx:if="{{isVip}}">预计每件收益：{{item.commision}}元</view> -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import router from '@/mixins/router'
  export default class GoodsItem extends wepy.component {
    constructor() {
      super()
      this.data.isVip = wepy.getStorageSync('isVip')
    }
    props = {
      item: {},
      mode: {} // index 首页 normal 普通商品列表
    }
    data={
      isVip: false
    }
    setVipLet() { // 监听会员
      this.isVip = wepy.getStorageSync('isVip')
      this.$apply()
    }
    mixins = [router]
    methods = {}
    onLoad() {}
  }
</script>
