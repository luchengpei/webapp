<style lang="scss" scoped>
@import '../../scss/common';
.identity-wrap {
  display: flex;
  flex-direction: column;
  .tips {
    margin: 50rpx 0;
    font-size: $fontSize4;
    color: $gray;
    text-align: center;
  }
  .bottom-button {
    position: fixed;
    bottom: 100rpx;
    left: 30rpx;
  }
  .g-form-input__code {

  }
}
</style>

<template>
  <view class="identity-wrap" style="{{configStyle}}">
      <text class="tips">本次操作需要短信确认，请输入\n{{phoneText}} 收到的短信验证码</text>
    <view class="g-form">
      <view class="g-form-item">
        <view class="g-form-label">
          <view class="g-form-label__inner">校验码</view>
        </view>
        <view class="g-form-content">
          <input class="g-form-input" type="number" maxlength="6" placeholder-class="g-placeholder" placeholder="填写校验码" value="{{code}}" @input="onInput('code')"></input>
          <view class="g-form-input__code" @tap="getCode">{{codeText}}</view>
        </view>
      </view>
    </view>
    <view class="g-button bottom-button" hover-class="g-hover" @tap="onSubmit">下一步</view>
  </view>
</template>

<script>
import wepy from 'wepy'
import base from '@/mixins/base'
import router from '@/mixins/router'
import wallet from '@/api/wallet'

export default class Identity extends wepy.page {
  config = {
    navigationBarTitleText: '身份认证'
  };
  data = {
    form: {},
    code: '',
    codeText: '获取校验码',
    timer: null,
    countDownSecond: 60,
    phoneText: '',
    mode: 'add' // add edit
  };
  mixins = [base, router];
  methods = {
    // 提交绑卡
    onSubmit() {
      // TODO 验证码字段
      const apiMap = {
        'add': 'bindCard',
        'edit': 'changeCard'
      }
      const param = {
        userId: wepy.getStorageSync('user').userId,
        subMerchantPhone: this.form.phone,
        subMerchantIdCard: this.form.idCard,
        subMerchantBankNo: this.form.cardNo,
        openBank: this.form.bankName,
        userName: this.form.name,
        code: this.code,
        isEq: 0 // 是否校验验证码 1不校验 0 校验
      }
      const postData = this.mode === 'add' ? {
        ...param
      } : {
        ...param,
        subMerchantId: this.form.subMerchantId
      }
      wallet[apiMap[this.mode]](postData).then(res => {
        this._redirectTo('/pages/bank/identity_success')
      })
    },
     // 获取验证码
    getCode() {
      if (this.countDownSecond !== 60) return
      wallet.withdrawCode({
        mobiles: this.form.phone
      }).then(res => {
        this.timer = setInterval(() => {
          if (this.countDownSecond === 0) {
            clearInterval(this.timer)
            this.codeText = `重新获取`
            this.countDownSecond = 60
          } else {
            this.countDownSecond = this.countDownSecond - 1
            this.codeText = `${this.countDownSecond}秒后重新获取`
          }
          this.$apply()
        }, 1000)
      })
    },
    onInput(key, e) {
      const value = e.detail.value
      this[key] = value
      this.$apply()
    }
  };
  onLoad(options, data) {
    const form = options.form ? JSON.parse(options.form) : {}
    console.log('form', form)
    this.mode = options.mode || 'add'
    this.form = form
    this.phoneText = `${this.form.phone.substring(0, 3)} **** ${this.form.phone.substring(7)}`
    this.$apply()
  }
  onUnload() {
    clearTimeout(this.timer)
  }
}
</script>
