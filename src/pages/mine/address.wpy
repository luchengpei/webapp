<style lang="scss" scoped>
  @import '../../scss/common';
  .my-address-page-container {
    width: 100%;
    background: $bgColor;
    /*margin-top: 88rpx;*/
  }
  .address-list {
    .address-item {
      position: relative;
      display: flex;
      padding: 0 40rpx;
      background: #fff;
      margin-bottom: 30rpx;
      .edit-btn {
        position: absolute;
        right: 40rpx;
        top: 30rpx;
        color: $mainColor;
        width: 110rpx;
        height: 48rpx;
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: $fontSize3;
        .icon {
          width: 36rpx;
          height: 36rpx;
        }
        .iconfont {
          font-size: $fontSize1;
          color: $mainColor;
        }
      }
      .check-box {
        display: flex;
        align-items: center;
        width: 70rpx;
        .icon {
          width: 46rpx;
          height: 46rpx;
        }
        .iconfont {
          font-size: 46rpx;
          color: $mainColor;
        }
      }
      .address-info {
        flex: 1;
        padding: 30rpx 0;
        .contact {
          font-size: $fontSize2;
          color: #2f3336;
          margin-bottom: 25rpx;
        }
        .addr {
          font-size: $fontSize4;
          color: $gray;
          width: 100%;
          overflow: hidden;
          display: -webkit-box;
          word-break: break-all;
          -webkit-box-orient: vertical;
          -webkit-line-clamp: 2;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }
    }
  }
  .bottom-box {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 130rpx;
    background: #fff;
    display: flex;
    align-items: center;
    justify-content: center;
    .add-btn {
      width: 670rpx;
      height: 88rpx;
      line-height: 88rpx;
      text-align: center;
      color: #fff;
      background-color: $mainColor;
      font-size: $fontSize1;
      border-radius: 8rpx;
    }
  }
</style>

<template>
  <view class="my-address-page-container" style="{{configStyle}}">
    <view class="address-list">
      <view class="address-item" wx:for="{{addrs}}">
        <view class="check-box" @tap="chooseDefault({{item.addressId}})">
          <i class="iconfont icon-info_kick" wx:if="{{item.isDefault}}"></i>
          <image class="icon" src="{{imageUrl + 'ic-check.png'}}" wx:else></image>
        </view>
        <view class="address-info" @tap="choose({{item}})">
          <view class="contact">{{item.receiver}} {{item.receiverPhone}}</view>
          <view class="addr">{{item.province}}{{item.city}}{{item.area}}{{item.address}}</view>
        </view>
        <view class="edit-btn" @tap="edit({{item}})">
          <i class="iconfont icon-bianji"></i>
          <text>编辑</text>
        </view>
      </view>
    </view>
    <view class="bottom-box {{isIpx ? 'fix-ipx-btn' : ''}}">
      <view class="add-btn" @tap="routerTo('/pages/mine/address_detail?t=add')">+ 添加新地址</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from '@/mixins/base'
  import router from '@/mixins/router'
  import address from '@/api/address'
  import Event from '@/utils/Event'
  import Tips from '@/utils/Tips'
  export default class Address extends wepy.page {
    config = {
      navigationBarTitleText: '收货地址'
    }
    components = {};
    data = {
      from: '',
      addrs: []
    }
    mixins = [base, router]
    methods = {
      edit(item) {
        wepy.setStorageSync('editAddr', item)
        wx.navigateTo({
          url: `/pages/mine/address_detail?t=edit`
        })
      },
      chooseDefault(addressId) {
        address.setDefault(addressId).then(() => {
          Tips.toast('修改默认收货地址成功', () => {
            Event.emit('DELIVERY_LIST_UPDATE')
          }, 'none')
        })
      },
      choose(item) {
        if (this.from && this.from === 'order') {
          Event.emit('TRADE_ADDRESS_UPDATE', item)
          wx.navigateBack()
        }
      }
    }
    onLoad(options) {
      this.from = options.f
      this.getAddr()
      Event.listen('DELIVERY_LIST_UPDATE', this.getAddr.bind(this), this)
    }
    getAddr() {
      this.loginCatch(async() => {
        this.addrs = await address.list(wepy.getStorageSync('user').userId) || []
        this.$apply()
      }, () => {
        this.getAddr()
      })
    }
  }
</script>
