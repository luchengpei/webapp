<style lang="scss" scoped>
  .news-page {
    .news-list {
      margin-top: 88rpx;
      background: #fff;
    }
  }
</style>

<template>
  <view class="news-page" style="{{configStyle}}">
    <Tab :tab.sync="tab" @change.user="switchTab" />
    <view class="news-list">
      <repeat for="{{newsData}}" key="index" index="index" item="item">
        <NewsCard :mode.sync="item" ></NewsCard>
      </repeat>
      <Empty wx:if="{{newsData.length===0}}" title="暂无资讯喔" subtitle="去看看其他页面吧"></Empty>
    </view> 
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Tab from '@/components/common/tab'
  import NewsCard from '@/components/news/news_card'
  import pagination from '@/mixins/pagination'
  import base from '@/mixins/base'
  import Empty from '@/components/common/empty'
  import news from '@/api/news'
  export default class NewsPage extends wepy.page {
    config = {
      navigationBarTitleText: '资讯',
      enablePullDownRefresh: true
    }
    components = {
      Tab,
      NewsCard,
      Empty
    }
    data = {
      tab: {// 选项卡数据
        page: '', // 分页对象
        list: [],
        selectedId: '0',
        scroll: true
      },
      newsData: []// 资讯数据
    }
    mixins = [base, pagination]
    methods = {
      switchTab(tab) {
        this.params(tab.selectedId)
        this.getNewsList()
      }
    }
    // 获取资讯分类 选项卡
    async getNewsType() {
      let data = await news.newsTypelist()
      // await this.next()
      this.tab.list = data
      this.tab.selectedId = this.tab.list[0].id
      this.getNewsList()
      this.$apply()
    }
    // 获取资讯
    async getNewsList() {
      this.page = await news.newsList()
      await this.next()
      this.newsData = this.page.list
      this.$apply()
      console.log('laoz的数据', this.newsData)
    }
    // 列表传参
    params() { // 获取资讯的参数
      return {
        categoryId: this.tab.selectedId
      }
    }
    // 到达底部
    async onReachBottom () {
      await this.next()
      this.newsData = this.page.list
      this.$apply()
    }
     // 下拉刷新
    async onPullDownRefresh () {
      await this.reload()
      this.newsData = this.page.list
      this.$apply()
    }
    onShow() {
      this.getNewsType()
    }
    onLoad() {
      this.getNewsType()
      // this.getNewsList()
    }
}
</script>
