<script>
// 全局正则表单提交验证
import wepy from 'wepy'
import tip from '@/utils/Tips'
export default class RegForm extends wepy.mixin {
  data = {

  }
  methods = {

  }
  // 全局公共表单验证方法
  _formIsOk(data, mapTip) {
    return new Promise((resolve, reject) => {
      // 获取数据类型
      let type = Object.prototype.toString.call(data)
      if (type === '[object Array]') { // 数组
        data.map((vd, id) => { // 遍历数组
          for (let val in vd) { // 遍历数组下的对象
            if (!this.fromReg(vd[val], mapTip.get(val)[1])) {
              tip.error(`${mapTip.get(val)[0]}`)
              reject(Error('不要惊慌，这个错误只是表单验证抛出的promise错误'))
            }
          }
        })
        resolve('呀呀呀呀呀呀呀呀，表单通过了')
      }
      if (type === '[object Object]') { // 对象
        for (let val in data) { // 遍历数组下的对象
          if (!this.fromReg(data[val], mapTip.get(val)[1])) {
            tip.error(`${mapTip.get(val)[0]}`)
            reject(Error('不要惊慌，这个错误只是表单验证抛出的promise错误'))
          }
          resolve('呀呀呀呀呀呀呀呀，表单通过了')
        }
      }
    })
  }
  // formREG 验证方式
  fromReg(value, regType) {
    let regIsOk = false
    switch (regType) {
      case '身份证':
        return /^[\d]{18}$/.test(value)
      case '姓名':
        return /^[\u4e00-\u9fa5]{2,4}$/.test(value.trim())
      case '电话':
        return /^[1][3,4,5,7,8][0-9]{9}$/.test(value)
      case '数组图片':
        return value.length >= 1
      case '非空':
        return /^[\d\D]{1,20}$/.test(value)
      case '验证码':
        return /^[\d]{6}$/.test(value)
      case '意见':
        return /^[\d\D]{5,}$/.test(value.trim())
      case '评论':
        return /^[\d\D]{1,}$/.test(value.trim())
      case '随意':
        return true
    }
    return regIsOk
  }
}
</script>
